/*
 * This file is generated by jOOQ.
*/
package jooq.objects.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.converters.TimestampToLocalDateTimeConverter;
import jooq.objects.CrmSchema;
import jooq.objects.Keys;
import jooq.objects.tables.records.CustomerRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Customer extends TableImpl<CustomerRecord> {

    private static final long serialVersionUID = 565550753;

    /**
     * The reference instance of <code>crm_schema.customer</code>
     */
    public static final Customer CUSTOMER = new Customer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerRecord> getRecordType() {
        return CustomerRecord.class;
    }

    /**
     * The column <code>crm_schema.customer.id</code>.
     */
    public final TableField<CustomerRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('crm_schema.customer_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>crm_schema.customer.name</code>.
     */
    public final TableField<CustomerRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>crm_schema.customer.surname</code>.
     */
    public final TableField<CustomerRecord, String> SURNAME = createField("surname", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>crm_schema.customer.photo</code>.
     */
    public final TableField<CustomerRecord, String> PHOTO = createField("photo", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm_schema.customer.created_by_user</code>.
     */
    public final TableField<CustomerRecord, Integer> CREATED_BY_USER = createField("created_by_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>crm_schema.customer.created</code>.
     */
    public final TableField<CustomerRecord, LocalDateTime> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "", new TimestampToLocalDateTimeConverter());

    /**
     * The column <code>crm_schema.customer.modified_by_user</code>.
     */
    public final TableField<CustomerRecord, Integer> MODIFIED_BY_USER = createField("modified_by_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>crm_schema.customer.modified</code>.
     */
    public final TableField<CustomerRecord, LocalDateTime> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "", new TimestampToLocalDateTimeConverter());

    /**
     * Create a <code>crm_schema.customer</code> table reference
     */
    public Customer() {
        this("customer", null);
    }

    /**
     * Create an aliased <code>crm_schema.customer</code> table reference
     */
    public Customer(String alias) {
        this(alias, CUSTOMER);
    }

    private Customer(String alias, Table<CustomerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Customer(String alias, Table<CustomerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CrmSchema.CRM_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CustomerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CUSTOMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CustomerRecord> getPrimaryKey() {
        return Keys.CUSTOMER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CustomerRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerRecord>>asList(Keys.CUSTOMER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CustomerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CustomerRecord, ?>>asList(Keys.CUSTOMER__CUSTOMER_CREATED_BY_USER_FKEY, Keys.CUSTOMER__CUSTOMER_MODIFIED_BY_USER_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Customer as(String alias) {
        return new Customer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Customer rename(String name) {
        return new Customer(name, null);
    }
}
